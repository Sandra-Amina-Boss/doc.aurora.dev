"use strict";(self.webpackChunkaurora_docs=self.webpackChunkaurora_docs||[]).push([[9071],{9613:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var o=r(9496);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),c=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},l="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),l=c(r),d=n,m=l["".concat(s,".").concat(d)]||l[d]||h[d]||a;return r?o.createElement(m,i(i({ref:t},u),{},{components:r})):o.createElement(m,i({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[l]="string"==typeof e?e:n,i[1]=p;for(var c=2;c<a;c++)i[c]=r[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3099:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>p,toc:()=>c});var o=r(1163),n=(r(9496),r(9613));const a={title:"Aurora Engine"},i=void 0,p={unversionedId:"dev-reference/aurora-engine",id:"dev-reference/aurora-engine",title:"Aurora Engine",description:"In the heart of Aurora is Aurora Engine \u2013 an Ethereum Virtual Machine (EVM) built on the Near Protocol.",source:"@site/docs/dev-reference/aurora-engine.md",sourceDirName:"dev-reference",slug:"/dev-reference/aurora-engine",permalink:"/dev-reference/aurora-engine",draft:!1,editUrl:"https://github.com/aurora-is-near/doc.aurora.dev/edit/master/docs/dev-reference/aurora-engine.md",tags:[],version:"current",frontMatter:{title:"Aurora Engine"},sidebar:"tutorialSidebar",previous:{title:"Troubleshooting",permalink:"/onboard/troubleshooting"},next:{title:"Networks Endpoints",permalink:"/dev-reference/network-endpoints"}},s={},c=[{value:"Powered by SputnikVM",id:"powered-by-sputnikvm",level:2},{value:"Additional Features",id:"additional-features",level:2},{value:"Changes to the output of some Opcodes",id:"changes-to-the-output-of-some-opcodes",level:3},{value:"Additional precompiles",id:"additional-precompiles",level:3},{value:"Default NEP-141 mapped ERC-20 contract",id:"default-nep-141-mapped-erc-20-contract",level:3}],u={toc:c},l="wrapper";function h(e){let{components:t,...r}=e;return(0,n.kt)(l,(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"In the heart of ",(0,n.kt)("a",{parentName:"p",href:"https://aurora.dev"},"Aurora")," is ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/aurora-is-near/aurora-engine"},"Aurora Engine")," \u2013 an Ethereum Virtual Machine (EVM) built on the Near Protocol.\nIt provides a solution for developers to deploy their apps on an Ethereum-compatible, high-throughput and scalable platform, with low transaction costs for their users."),(0,n.kt)("p",null,"Developers may enjoy familiar Ethereum tooling when working with their Solidity smart contracts on Aurora.\nThe base fee of Aurora is ETH, which provides a smooth experience for DApps\u2019 users."),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"We recommend you to interact with the EVM through Aurora Pass/MetaMask and Hardhat/Foundry as we provide\nan identical experience through our ",(0,n.kt)("a",{parentName:"p",href:"https://aurora.dev/start"},"RPC"),".\nHowever, you may also interact with it through ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/aurora-is-near/aurora-workspace"},"Aurora workspaces"),", the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/aurora-is-near/aurora-cli-rs"},"Aurora CLI"),", or the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/near/near-cli-rs"},"Near CLI"),".")),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"Since the underlying measure of computational work is ",(0,n.kt)("em",{parentName:"p"},"Near gas"),", an edge case could arise when\na transaction runs out of Near gas before running out of ",(0,n.kt)("em",{parentName:"p"},"EVM gas"),"."),(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("em",{parentName:"p"},"In this case the transaction will be considered as failed on Aurora"),", but this may or may not be\ncompatible with what the outcome on Ethereum would have been (if the gas limit was actually high\nenough for the transaction to complete had Near gas not been the limiting factor)."),(0,n.kt)("p",{parentName:"admonition"},"This case will not come up for the vast majority of transactions, and indeed will become\nless likely as we improve the efficiency of our EVM contract (thus allowing Near gas to go further\nin terms of EVM computation). Eventually, we hope to eliminate this entirely by setting\nthe ",(0,n.kt)("a",{parentName:"p",href:"https://ethereum.org/en/developers/docs/blocks/#block-size"},"ETH block gas limit")," on Aurora to be lower than the amount of Near which we could spend in one\ntransaction."),(0,n.kt)("p",{parentName:"admonition"},"You can read more about this ",(0,n.kt)("a",{parentName:"p",href:"https://dev.aurora.dev/posts/evm-gas-near-gas-on-aurora"},"here"),".")),(0,n.kt)("h2",{id:"powered-by-sputnikvm"},"Powered by SputnikVM"),(0,n.kt)("p",null,"The Aurora Engine utilises the power of the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/rust-blockchain/evm"},"SputnikVM")," in its current implementation. Additionally,\npart of the Aurora Labs team have been made contributors to the project due to the significant\ncontributions that they have made. However, we intend to explore other implementations and possibly\ndevelop our own backend depending on performance considerations."),(0,n.kt)("h2",{id:"additional-features"},"Additional Features"),(0,n.kt)("h3",{id:"changes-to-the-output-of-some-opcodes"},"Changes to the output of some Opcodes"),(0,n.kt)("p",null,"Some of the Opcodes provided by Ethereum we are not able to entirely support. Though we do not\nbelieve that this will impact EVM contracts that use these Opcodes, it is important to note these\nchanges which can be found in the ",(0,n.kt)("a",{parentName:"p",href:"/dev-reference/opcodes"},"Aurora EVM opcode documentation"),"."),(0,n.kt)("h3",{id:"additional-precompiles"},"Additional precompiles"),(0,n.kt)("p",null,"In order to provide additional support to the NEAR ecosystem, some additional precompiles are\navailable. However, the ",(0,n.kt)("inlineCode",{parentName:"p"},"exitToNear")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"exitToEthereum")," precompiles are only accessible through\nthe NEP-141 to ERC-20 contract which only can be deployed via the ",(0,n.kt)("inlineCode",{parentName:"p"},"deploy_erc20_token")," function in\nthe Aurora EVM."),(0,n.kt)("p",null,"More information about these precompiles can be found in the ",(0,n.kt)("a",{parentName:"p",href:"/dev-reference/precompiles"},"Aurora EVM precompile documentation"),"."),(0,n.kt)("h3",{id:"default-nep-141-mapped-erc-20-contract"},"Default NEP-141 mapped ERC-20 contract"),(0,n.kt)("p",null,"Under the hood, all bridged ERC-20 contracts are NEAR NEP-141 fungible tokens through the process\ndescribed in the ",(0,n.kt)("a",{parentName:"p",href:"/bridge/introduction"},"Rainbow Bridge overview"),"."),(0,n.kt)("p",null,"In order to grant the ability to access to NEP-141 fungible tokens as an ERC-20 contract, we use the\nNEP-141 mapped ERC-20 contract which is automatically deployed by the Aurora EVM when invoking the\n",(0,n.kt)("inlineCode",{parentName:"p"},"deploy_erc20_token")," function. This allows users to deposit ERC-20 fungible tokens through the\nRainbow Bridge which will generate a proof for the Engine to confirm the transfers' existence. Thus\nenabling the user to access their NEP-141 or Ethereum ERC-20 tokens on Aurora."))}h.isMDXComponent=!0}}]);
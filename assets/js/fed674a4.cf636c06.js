"use strict";(self.webpackChunkaurora_docs=self.webpackChunkaurora_docs||[]).push([[165],{9613:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return s}});var a=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=u(n),s=r,h=m["".concat(p,".").concat(s)]||m[s]||c[s]||l;return n?a.createElement(h,i(i({ref:t},d),{},{components:n})):a.createElement(h,i({ref:t},d))}));function s(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},388:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return s},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return c}});var a=n(5443),r=n(3010),l=(n(9496),n(9613)),i=["components"],o={title:"EVM"},p="Compatibility with the Ethereum Virtual Machine (EVM)",u={unversionedId:"compat/evm",id:"compat/evm",title:"EVM",description:"The Aurora Engine implements an Ethereum Virtual Machine (EVM) on top of the",source:"@site/docs/compat/evm.md",sourceDirName:"compat",slug:"/compat/evm",permalink:"/compat/evm",draft:!1,editUrl:"https://github.com/aurora-is-near/doc.aurora.dev/edit/master/docs/compat/evm.md",tags:[],version:"current",frontMatter:{title:"EVM"},sidebar:"tutorialSidebar",previous:{title:"DIA Oracle",permalink:"/integrate/oracles/dia"},next:{title:"Gas",permalink:"/compat/gas"}},d={},c=[{value:"Balances",id:"balances",level:2},{value:"Gas",id:"gas",level:2},{value:"Precompiles",id:"precompiles",level:2},{value:"Standard precompiles",id:"standard-precompiles",level:3},{value:"Opcodes",id:"opcodes",level:2},{value:"<code>BLOCKHASH</code>",id:"blockhash",level:3},{value:"<code>COINBASE</code>",id:"coinbase",level:3},{value:"<code>DIFFICULTY</code>",id:"difficulty",level:3},{value:"<code>GASLIMIT</code>",id:"gaslimit",level:3},{value:"Limitations",id:"limitations",level:2},{value:"Source Code",id:"source-code",level:2}],m={toc:c};function s(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"compatibility-with-the-ethereum-virtual-machine-evm"},"Compatibility with the Ethereum Virtual Machine (EVM)"),(0,l.kt)("p",null,"The Aurora Engine implements an Ethereum Virtual Machine (EVM) on top of the\nNEAR Protocol."),(0,l.kt)("h2",{id:"balances"},"Balances"),(0,l.kt)("p",null,"EVM address balances are denominated in ether (ETH) for compatibility with\nEthereum."),(0,l.kt)("h2",{id:"gas"},"Gas"),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"/compat/gas"},"notes on gas"),"."),(0,l.kt)("h2",{id:"precompiles"},"Precompiles"),(0,l.kt)("h3",{id:"standard-precompiles"},"Standard precompiles"),(0,l.kt)("div",{class:"compat-evm-precompiles-table"}),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Address"),(0,l.kt)("th",{parentName:"tr",align:null},"ID"),(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Spec"),(0,l.kt)("th",{parentName:"tr",align:null},"Status"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x01"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ECRecover")),(0,l.kt)("td",{parentName:"tr",align:null},"ECDSA public key recovery"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://ethereum.github.io/yellowpaper/paper.pdf"},"Yellow Paper")),(0,l.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x02"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"SHA256")),(0,l.kt)("td",{parentName:"tr",align:null},"SHA-2 256-bit hash function"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://ethereum.github.io/yellowpaper/paper.pdf"},"Yellow Paper")),(0,l.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x03"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"RIPEMD160")),(0,l.kt)("td",{parentName:"tr",align:null},"RIPEMD 160-bit hash function"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://ethereum.github.io/yellowpaper/paper.pdf"},"Yellow Paper")),(0,l.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x04"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Identity")),(0,l.kt)("td",{parentName:"tr",align:null},"Identity function"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://ethereum.github.io/yellowpaper/paper.pdf"},"Yellow Paper")),(0,l.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x05"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ModExp")),(0,l.kt)("td",{parentName:"tr",align:null},"Big integer modular exponentiation"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://eips.ethereum.org/EIPS/eip-198"},"EIP-198")),(0,l.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x06"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"BN128Add")),(0,l.kt)("td",{parentName:"tr",align:null},"Elliptic curve addition"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://eips.ethereum.org/EIPS/eip-196"},"EIP-196")),(0,l.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x07"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"BN128Mul")),(0,l.kt)("td",{parentName:"tr",align:null},"Elliptic curve scalar multiplication"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://eips.ethereum.org/EIPS/eip-196"},"EIP-196")),(0,l.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x08"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"BN128Pair")),(0,l.kt)("td",{parentName:"tr",align:null},"Elliptic curve pairing check"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://eips.ethereum.org/EIPS/eip-197"},"EIP-197")),(0,l.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x09"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Blake2F")),(0,l.kt)("td",{parentName:"tr",align:null},"BLAKE2b ",(0,l.kt)("inlineCode",{parentName:"td"},"F")," compression function"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://eips.ethereum.org/EIPS/eip-152"},"EIP-152")),(0,l.kt)("td",{parentName:"tr",align:null},"\u2705")))),(0,l.kt)("h2",{id:"opcodes"},"Opcodes"),(0,l.kt)("h3",{id:"blockhash"},(0,l.kt)("inlineCode",{parentName:"h3"},"BLOCKHASH")),(0,l.kt)("p",null,"This opcode currently does not return a real blockhash.\nHowever, it does respect the logic that a non-zero value is returned for the most recent 256 blocks (not including the current block).\nFor all other inputs it returns zero.\nThe non-zero value that is returned is computed based on the block height and properties of the Aurora Engine contract (chain ID and account ID).\nConcretely, as of ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/aurora-is-near/aurora-engine/pull/213/"},"#213"),", the value returned is"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"BLOCKHASH(h: u64) = sha256( 0x00 || h || chain_id || account_id )\n")),(0,l.kt)("p",null,"where ",(0,l.kt)("inlineCode",{parentName:"p"},"||")," is byte concatenation and it is assumed ",(0,l.kt)("inlineCode",{parentName:"p"},"h")," (a 64-bit number) is converted to bytes in big endian encoding.\nThe leading zero byte in the concatenation is a version byte which may change if a new blockhash scheme is introduced in the future.\nThe ",(0,l.kt)("inlineCode",{parentName:"p"},"chain_id")," depends on the network the Aurora Engine contract is deployed to (see ",(0,l.kt)("a",{parentName:"p",href:"../getting-started/network-endpoints"},"networks table"),").\nThe ",(0,l.kt)("inlineCode",{parentName:"p"},"account_id")," is the name of the NEAR account where the contract is deployed (see the Engine ID column in the ",(0,l.kt)("a",{parentName:"p",href:"../getting-started/network-endpoints"},"networks table"),")."),(0,l.kt)("h3",{id:"coinbase"},(0,l.kt)("inlineCode",{parentName:"h3"},"COINBASE")),(0,l.kt)("p",null,"This opcode returns the EVM address of the Aurora Engine."),(0,l.kt)("p",null,"For example, for the Aurora Engine deployment on the ",(0,l.kt)("inlineCode",{parentName:"p"},"aurora")," account,\n",(0,l.kt)("inlineCode",{parentName:"p"},"COINBASE")," returns ",(0,l.kt)("em",{parentName:"p"},"0x4444588443C3a91288c5002483449Aba1054192b"),"."),(0,l.kt)("h3",{id:"difficulty"},(0,l.kt)("inlineCode",{parentName:"h3"},"DIFFICULTY")),(0,l.kt)("p",null,"This opcode always returns zero, since NEAR is not a proof-of-work (PoW)\nnetwork."),(0,l.kt)("h3",{id:"gaslimit"},(0,l.kt)("inlineCode",{parentName:"h3"},"GASLIMIT")),(0,l.kt)("p",null,"This opcode always returns\n",(0,l.kt)("em",{parentName:"p"},"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),"\n(2^256-1)."),(0,l.kt)("h2",{id:"limitations"},"Limitations"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"The Berlin hard fork is not yet supported. The EVM currently supports the\nfeature set of the Istanbul hard fork.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"The ",(0,l.kt)("a",{parentName:"p",href:"#blockhash"},(0,l.kt)("inlineCode",{parentName:"a"},"BLOCKHASH")," opcode")," does not return the hash of an actual block (see above for details)."))),(0,l.kt)("h2",{id:"source-code"},"Source Code"),(0,l.kt)("p",null,"The Aurora Engine source code repository is at:\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/aurora-is-near/aurora-engine"},"github.com/aurora-is-near/aurora-engine"),"."))}s.isMDXComponent=!0}}]);
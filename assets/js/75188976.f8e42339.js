"use strict";(self.webpackChunkaurora_docs=self.webpackChunkaurora_docs||[]).push([[786],{9613:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(9496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),h=l(r),d=a,y=h["".concat(s,".").concat(d)]||h[d]||u[d]||o;return r?n.createElement(y,i(i({ref:t},p),{},{components:r})):n.createElement(y,i({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=h;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},2936:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var n=r(2081),a=(r(9496),r(9613));const o={title:"Pyth",sidebar_position:2},i=void 0,c={unversionedId:"integrate/oracles/pyth",id:"integrate/oracles/pyth",title:"Pyth",description:"Pyth is an oracle that publishes financial market data to multiple blockchains.",source:"@site/docs/integrate/oracles/pyth.md",sourceDirName:"integrate/oracles",slug:"/integrate/oracles/pyth",permalink:"/integrate/oracles/pyth",draft:!1,editUrl:"https://github.com/aurora-is-near/doc.aurora.dev/edit/master/docs/integrate/oracles/pyth.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Pyth",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Covalent",permalink:"/integrate/indexers/covalent"},next:{title:"Flux Protocol",permalink:"/integrate/oracles/flux-protocol"}},s={},l=[],p={toc:l};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Pyth is an oracle that publishes financial market data to multiple blockchains.\nPyth uses an on-demand price update model that is slightly different from other oracles you may be more familiar with.\nPyth price updates are streamed off-chain via the Wormhole Network, a cross-chain messaging protocol. These updates are signed such that the Pyth on-chain program can verify their authenticity.\nUpdating the on-chain price is a permissionless operation: anyone can submit a valid Wormhole message to the Pyth contract to update the price."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.pyth.network/"},"See Pyth documentation")," to get started.\n",(0,a.kt)("a",{parentName:"p",href:"https://discord.gg/invite/PythNetwork"},"Join Pyth Discord")," if you have any questions or requests."))}u.isMDXComponent=!0}}]);